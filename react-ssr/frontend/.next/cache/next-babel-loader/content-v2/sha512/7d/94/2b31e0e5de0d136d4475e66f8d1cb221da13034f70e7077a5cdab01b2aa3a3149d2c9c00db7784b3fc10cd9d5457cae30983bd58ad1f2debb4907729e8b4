{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\maria\\\\Documents\\\\Recode\\\\Curso\\\\ModuloNoSQL\\\\PitangaCos\\\\frontend\\\\src\\\\pages\\\\Products\\\\Products.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useEffect, useState, useRef, lazy, Suspense } from 'react';\nimport SideMenu from \"../../components/SideMenu/SideMenu\";\nimport * as CartAction from '../../actions/cartActions';\nimport './Product.css'; //import Product from './Product';\n\nconst Product = /*#__PURE__*/lazy(_c = () => import('./Product'));\n_c2 = Product;\n\nfunction Products(props) {\n  _s();\n\n  const {\n    0: products,\n    1: setProducts\n  } = useState([]);\n  const {\n    0: categories,\n    1: setCategories\n  } = useState(['todos']);\n  const {\n    0: currentProducts,\n    1: setCurrentProducts\n  } = useState([]);\n  const mounted = useRef(true);\n  useEffect(() => {\n    const url = 'http://localhost:3001/products';\n    fetch(url).then(response => response.json()).then(products => {\n      if (mounted.current) {\n        setProducts(products.products);\n        setCurrentProducts(products.products);\n      }\n    });\n    return () => mounted.current = false;\n  }, [products]);\n  useEffect(() => {\n    async function Categories() {\n      if (products) {\n        await products.forEach(product => {\n          if (categories.indexOf(product[\"category\"]) === -1) {\n            setCategories([...categories, product[\"category\"]]);\n          }\n        });\n      }\n    }\n\n    Categories();\n  });\n\n  const selectCategory = category => {\n    if (category === 'todos') {\n      setCurrentProducts(products);\n    } else if (category === 'perfume') {\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\n    } else if (category === 'dailycare') {\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\n    } else if (category === 'beard') {\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\n    } else if (category === 'hair') {\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\n    } else if (category === 'makeup') {\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sectionTitle\",\n      children: \" Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"prodBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"sectionSideMenu\",\n        children: /*#__PURE__*/_jsxDEV(SideMenu, {\n          categories: categories,\n          selectCategory: selectCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('../../images/suspense-prod.svg').default,\n          alt: \"card produto loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"sectionShowcase\",\n          children: currentProducts && currentProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n            itemsCart: props.itemsCart.itemsCart,\n            addItem: props.addItem,\n            product: product\n          }, product.productID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"Y7XhcFCktmvjo58D2cjYYmzca5I=\");\n\n_c3 = Products;\n\nconst mapStateToProps = state => ({\n  itemsCart: state.itemsCart\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartAction, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Product$lazy\");\n$RefreshReg$(_c2, \"Product\");\n$RefreshReg$(_c3, \"Products\");","map":{"version":3,"sources":["C:/Users/maria/Documents/Recode/Curso/ModuloNoSQL/PitangaCos/frontend/src/pages/Products/Products.js"],"names":["React","connect","bindActionCreators","useEffect","useState","useRef","lazy","Suspense","SideMenu","CartAction","Product","Products","props","products","setProducts","categories","setCategories","currentProducts","setCurrentProducts","mounted","url","fetch","then","response","json","current","Categories","forEach","product","indexOf","selectCategory","category","filter","require","default","map","itemsCart","addItem","productID","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useEffect, useState, useRef, lazy, Suspense } from 'react';\r\nimport SideMenu from \"../../components/SideMenu/SideMenu\";\r\n\r\nimport * as CartAction from '../../actions/cartActions';\r\nimport './Product.css';\r\n//import Product from './Product';\r\nconst Product = lazy (() => import('./Product'))\r\n\r\n\r\n\r\nfunction Products(props) {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState(['todos']);\r\n  const [currentProducts, setCurrentProducts] = useState([]);\r\n  const mounted = useRef(true);\r\n\r\n\r\n  useEffect(() =>{\r\n    const url = 'http://localhost:3001/products';\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then( products => {\r\n        if(mounted.current) {         \r\n        setProducts(products.products);\r\n        setCurrentProducts(products.products);\r\n        }\r\n      });\r\n\r\n    return () => mounted.current = false;\r\n  },[products]);\r\n\r\n  useEffect(() => {\r\n    async function Categories(){\r\n\r\n      if (products){\r\n        await products.forEach(product => {\r\n          if (categories.indexOf(product[\"category\"]) === -1){\r\n            setCategories([...categories,product[\"category\"]]);\r\n          }\r\n        });  \r\n      }\r\n    }\r\n    Categories()\r\n  })\r\n\r\n  const selectCategory = (category) =>{\r\n    \r\n    if (category === 'todos'){\r\n      setCurrentProducts(products);\r\n    } else if (category === 'perfume'){\r\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\r\n    } else if (category === 'dailycare'){\r\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\r\n    } else if (category === 'beard'){\r\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\r\n    } else if (category === 'hair'){\r\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\r\n    } else if (category === 'makeup'){\r\n      setCurrentProducts(products.filter(product => product[\"category\"] === category));\r\n    }    \r\n  }\r\n  return (\r\n    <main>\r\n      <h1 className=\"sectionTitle\"> Products</h1>\r\n      <section id=\"prodBody\">\r\n        <section id=\"sectionSideMenu\">\r\n          <SideMenu  categories={categories} selectCategory={selectCategory} />\r\n        </section>\r\n        <Suspense fallback={<img src={require('../../images/suspense-prod.svg').default} alt=\"card produto loading\"/>}>\r\n        <section id=\"sectionShowcase\">\r\n          \r\n            {currentProducts &&\r\n              currentProducts.map(product =>             \r\n                <Product  key={product.productID} itemsCart={props.itemsCart.itemsCart} addItem={props.addItem} product={product} />           \r\n              )\r\n            }\r\n          \r\n        </section>\r\n        </Suspense>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  itemsCart: state.itemsCart\r\n})\r\nconst mapDispatchToProps = (dispatch) => \r\n      bindActionCreators(CartAction, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products)"]},"metadata":{},"sourceType":"module"}